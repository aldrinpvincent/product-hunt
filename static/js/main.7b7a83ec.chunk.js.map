{"version":3,"sources":["components/posts/Content.js","components/posts/Thumbnail.js","components/posts/LikeButton.js","components/comments/CommentItem.js","api/comments.js","containers/Comments.js","containers/PostItem.js","api/posts.js","components/favourites/FavItem.js","containers/Favourites.js","containers/PostList.js","App.js","serviceWorker.js","index.js"],"names":["Content","props","react_default","a","createElement","className","itemProp","name","tagline","catogory","Thumbnail","alt","src","LikeButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","liked","handleClick","bind","assertThisInitialized","e","stopPropagation","setState","handleLike","target","id","label","onClick","Component","CommentItem","comment","username","image_url","body","getComments","_ref","asyncToGenerator","regenerator_default","mark","_callee","postId","url","commentsResponse","commentsData","commentsList","wrap","_context","prev","next","abrupt","concat","axios","get","headers","Content-Type","Accept","Authorization","sent","data","processcommentsData","comments","t0","console","error","stop","_x","apply","arguments","map","item","user","ItemModal","commentCount","loadMoreComments","_this2","modalId","then","currentCount","commentList","loadMore","length","i","push","comments_CommentItem","key","loadButton","Modal","isOpen","show","toggle","autoFocus","size","children","href","rel","PostItem","modal","currentTarget","preventDefault","prevState","Comments","post","posts_Thumbnail","posts_Content","posts_LikeButton","getPosts","date","postsResponse","postsData","postsList","processPostsData","posts","postList","forEach","thumbnail","topics","discussion_url","FavItem","Favourites","likedPosts","favourites_FavItem","PostList","handleDateChange","loading","startDate","Date","updateLikedPosts","getLikedPosts","isLiked","_this3","newLiked","slice","index","indexOf","splice","_this4","hasOwnProperty","element","containers_PostItem","Row","Col","lg","md","sm","xs","entry_default","maxDate","value","onChange","containers_Favourites","likes","App","Fragment","Container","fluid","src_containers_PostList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b7a83ec.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Content = props => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <h3 className=\"content\" itemProp=\"name\">\r\n        {props.name}\r\n      </h3>\r\n      <p className=\"tag-line\" itemProp=\"itemDescription\">\r\n        {props.tagline}\r\n      </p>\r\n      <span className=\"meta_info\">{props.catogory}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nconst Thumbnail = props => {\r\n  return (\r\n    <div className=\"thumbnail\">\r\n      <img alt={props.name} src={props.src} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thumbnail;\r\n","import React, { Component } from \"react\";\r\n\r\nclass LikeButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      liked: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      liked: !this.state.liked\r\n    });\r\n    this.props.handleLike(e.target.id, !this.state.liked);\r\n  }\r\n\r\n  render() {\r\n    const label = this.state.liked ? \"Unlike\" : \"Like\";\r\n    return (\r\n      <div className=\"like-button\">\r\n        <button\r\n          id={this.props.id}\r\n          className=\"btn btn-primary\"\r\n          onClick={this.handleClick}\r\n        >\r\n          {label}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LikeButton;\r\n","import React from \"react\";\r\n\r\nconst CommentItem = props => {\r\n  return (\r\n    <li className=\"comment-wrapper\">\r\n      <div className=\"comment-image\">\r\n        <img alt={props.comment.username} src={props.comment.image_url} />\r\n      </div>\r\n\r\n      <div className=\"content-wrapper\">\r\n        <h3 className=\"content\" itemProp=\"name\">\r\n          {props.comment.username}\r\n        </h3>\r\n        <p className=\"tag-line\" itemProp=\"itemDescription\">\r\n          {props.comment.body}\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import axios from \"axios\";\r\n\r\nconst getComments = async postId => {\r\n  if (!postId) return [];\r\n  let url = `https://api.producthunt.com/v1/posts/${postId}/comments`;\r\n\r\n  try {\r\n    const commentsResponse = await axios.get(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization:\r\n          \"Bearer 96f7a2e0834361d6d901e4b156fa5829da97fa5227856382348cc8d7df9aa9e0 \"\r\n      }\r\n    });\r\n    const commentsData = await commentsResponse.data;\r\n    const commentsList = await processcommentsData(commentsData.comments);\r\n    return commentsList;\r\n  } catch (e) {\r\n    console.error(\"Looks like there was a problem on getting comments. \" + e);\r\n  }\r\n};\r\n\r\nconst processcommentsData = comments => {\r\n  let commentsList = comments.map(item => {\r\n    return {\r\n      id: item.id,\r\n      body: item.body,\r\n      username: item.user.name,\r\n      image_url: item.user.image_url[\"60px\"]\r\n    };\r\n  });\r\n  return commentsList;\r\n};\r\n\r\nexport default getComments;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"reactstrap\";\r\nimport CommentItem from \"../components/comments/CommentItem\";\r\nimport getComments from \"../api/comments\";\r\n\r\nclass ItemModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { comments: [], commentCount: 5 };\r\n    this.loadMoreComments = this.loadMoreComments.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getComments(this.props.modalId).then(comments => {\r\n      this.setState({ comments: comments });\r\n    });\r\n  }\r\n\r\n  loadMoreComments() {\r\n    let currentCount = this.state.commentCount;\r\n    this.setState({ commentCount: currentCount + 5 });\r\n  }\r\n\r\n  render() {\r\n    let commentList = [];\r\n    const { comments } = this.state;\r\n\r\n    const loadMore = this.state.commentCount < comments.length ? true : false;\r\n    const commentCount =\r\n      this.state.commentCount < comments.length\r\n        ? this.state.commentCount\r\n        : comments.length;\r\n\r\n    for (let i = 0; i < commentCount; i++) {\r\n      const comment = comments[i];\r\n      commentList.push(<CommentItem key={comment.id} comment={comment} />);\r\n    }\r\n    commentList = commentList.length ? (\r\n      commentList\r\n    ) : (\r\n      <p className=\"left full-width\">Loading comments...</p>\r\n    );\r\n\r\n    const loadButton = loadMore ? (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-info load-button\"\r\n          onClick={this.loadMoreComments}\r\n        >\r\n          Load more comments...\r\n        </button>\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.show}\r\n        toggle={this.props.toggle}\r\n        autoFocus={true}\r\n        size=\"lg\"\r\n      >\r\n        {this.props.children}\r\n        <div className=\"comments\">\r\n          <p className=\"comments-label\">COMMENTS</p>`\r\n          <a\r\n            className=\"right\"\r\n            href={this.props.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Visit Product Page &rarr;\r\n          </a>\r\n          {<ul> {commentList}</ul>}\r\n        </div>\r\n        {loadButton}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemModal;\r\n","import React, { Component } from \"react\";\r\nimport Content from \"../components/posts/Content\";\r\nimport Thumbnail from \"../components/posts/Thumbnail\";\r\nimport LikeButton from \"../components/posts/LikeButton\";\r\nimport ItemModal from \"./Comments\";\r\n\r\nclass PostItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { modal: false, modalId: 0 };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    let id = e.currentTarget.id;\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n      modalId: id\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const modal = this.state.modal ? (\r\n      <ItemModal\r\n        url={this.props.post.url}\r\n        toggle={this.handleClick}\r\n        show={this.state.modal}\r\n        modalId={this.state.modalId}\r\n      >\r\n        <Thumbnail\r\n          name={this.props.post.name}\r\n          src={this.props.post.image_url}\r\n        />\r\n\r\n        <Content\r\n          name={this.props.post.name}\r\n          tagline={this.props.post.tagline}\r\n          catogory={this.props.post.catogory}\r\n        />\r\n      </ItemModal>\r\n    ) : null;\r\n\r\n    return (\r\n      <li className=\"post-item\" id={this.props.id} onClick={this.handleClick}>\r\n        {modal}\r\n\r\n        <Thumbnail\r\n          name={this.props.post.name}\r\n          src={this.props.post.image_url}\r\n        />\r\n\r\n        <Content\r\n          name={this.props.post.name}\r\n          tagline={this.props.post.tagline}\r\n          catogory={this.props.post.catogory}\r\n        />\r\n\r\n        <LikeButton id={this.props.id} handleLike={this.props.handleLike} />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostItem;\r\n","import axios from \"axios\";\r\n\r\nconst getPosts = async date => {\r\n  let url = !date\r\n    ? `https://api.producthunt.com/v1/posts`\r\n    : `https://api.producthunt.com/v1/posts?day=${date}`;\r\n\r\n  try {\r\n    const postsResponse = await axios.get(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization:\r\n          \"Bearer 96f7a2e0834361d6d901e4b156fa5829da97fa5227856382348cc8d7df9aa9e0 \"\r\n      }\r\n    });\r\n    const postsData = await postsResponse.data;\r\n    const postsList = await processPostsData(postsData.posts);\r\n    return postsList;\r\n  } catch (e) {\r\n    console.error(\"Looks like there was a problem on getting Posts. \" + e);\r\n  }\r\n};\r\n\r\nconst processPostsData = posts => {\r\n  let postList = {};\r\n\r\n  posts.forEach(item => {\r\n    postList[item.id] = {\r\n      name: item.name,\r\n      tagline: item.tagline,\r\n      image_url: item.thumbnail && item.thumbnail.image_url,\r\n      catogory: item.topics[0] && item.topics[0].name,\r\n      url: item.discussion_url\r\n    };\r\n  });\r\n\r\n  // console.log(\"postList1 :\", postList);\r\n\r\n  // let postsList = [];\r\n\r\n  // postsList = posts.map(item => {\r\n  //   return {\r\n  //     id: item.id,\r\n  //     name: item.name,\r\n  //     tagline: item.tagline,\r\n  //     image_url: item.thumbnail && item.thumbnail.image_url,\r\n  //     catogory: item.topics[0] && item.topics[0].name\r\n  //   };\r\n  // });\r\n\r\n  return postList;\r\n};\r\n\r\nexport default getPosts;\r\n","import React, { Component } from \"react\";\r\nimport Content from \"../posts/Content\";\r\nimport Thumbnail from \"../posts/Thumbnail\";\r\nimport ItemModal from \"../../containers/Comments\";\r\n\r\nclass FavItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { modal: false, modalId: 0 };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    let id = e.currentTarget.id;\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n      modalId: id\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const modal = this.state.modal ? (\r\n      <ItemModal\r\n        toggle={this.handleClick}\r\n        show={this.state.modal}\r\n        modalId={this.state.modalId}\r\n      >\r\n        <Thumbnail\r\n          name={this.props.post.name}\r\n          src={this.props.post.image_url}\r\n        />\r\n\r\n        <Content\r\n          name={this.props.post.name}\r\n          tagline={this.props.post.tagline}\r\n          catogory={this.props.post.catogory}\r\n        />\r\n      </ItemModal>\r\n    ) : null;\r\n    return (\r\n      <li\r\n        className=\"post-item\"\r\n        id={this.props.post.id}\r\n        onClick={this.handleClick}\r\n      >\r\n        {modal}\r\n\r\n        <div className=\"fav-thumbnail\">\r\n          <img alt={this.props.post.name} src={this.props.post.image_url} />\r\n        </div>\r\n\r\n        <div className=\"content-wrapper\">\r\n          <h3 className=\"content\" itemProp=\"name\">\r\n            {this.props.post.name}\r\n          </h3>\r\n\r\n          <span className=\"meta_info\">{this.props.post.catogory}</span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavItem;\r\n","import React from \"react\";\r\nimport FavItem from \"../components/favourites/FavItem\";\r\n\r\nconst Favourites = props => {\r\n  let posts = props.likedPosts;\r\n  let postList = [];\r\n  posts.forEach(post => {\r\n    postList.push(<FavItem key={post.id} post={post} />);\r\n  });\r\n  return postList;\r\n};\r\n\r\nexport default Favourites;\r\n","import React, { Component } from \"react\";\r\nimport PostItem from \"./PostItem\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport DatePicker from \"react-date-picker\";\r\n\r\nimport getPosts from \"../api/posts\";\r\nimport Favourites from \"./Favourites\";\r\nimport \"./PostList.css\";\r\n\r\nclass PostList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      posts: [],\r\n      startDate: new Date(),\r\n      modal: false,\r\n      modalId: 0,\r\n      liked: [],\r\n      likedPosts: []\r\n    };\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleLike = this.handleLike.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.updateLikedPosts = this.updateLikedPosts.bind(this);\r\n    this.getLikedPosts = this.getLikedPosts.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getPosts().then(posts => {\r\n      this.setState({ posts: posts, loading: false });\r\n    });\r\n  }\r\n\r\n  handleLike(id, isLiked) {\r\n    let newLiked = this.state.liked.slice();\r\n    if (isLiked) {\r\n      newLiked.push(id);\r\n    } else {\r\n      var index = newLiked.indexOf(id);\r\n      if (index > -1) {\r\n        newLiked.splice(index, 1);\r\n      }\r\n    }\r\n    this.setState(\r\n      {\r\n        liked: newLiked\r\n      },\r\n      () => {\r\n        this.updateLikedPosts();\r\n      }\r\n    );\r\n  }\r\n\r\n  updateLikedPosts() {\r\n    let likedPosts = [];\r\n    likedPosts = this.state.liked.map(id => {\r\n      let post = this.state.posts[id];\r\n      post.id = id;\r\n      return post;\r\n    });\r\n    this.setState({ likedPosts });\r\n  }\r\n\r\n  getLikedPosts() {\r\n    return this.state.likedPosts;\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    this.setState({ loading: true });\r\n    getPosts(date).then(posts => {\r\n      this.setState({ posts: posts, startDate: date, loading: false });\r\n    });\r\n  };\r\n\r\n  toggle(e) {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n      modalId: e.currentTarget.id\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    let postList = [];\r\n    const { posts } = this.state;\r\n    for (const post in posts) {\r\n      if (posts.hasOwnProperty(post)) {\r\n        const element = posts[post];\r\n        postList.push(\r\n          <PostItem\r\n            key={post}\r\n            id={post}\r\n            post={element}\r\n            handleClick={this.toggle}\r\n            handleLike={this.handleLike}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <p>Loading posts...</p>;\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n          <div className=\"date-pick\">\r\n            <span className=\"date-pick-text\">View Posts of </span>\r\n            <DatePicker\r\n              maxDate={new Date()}\r\n              value={this.state.startDate}\r\n              onChange={this.handleDateChange}\r\n            />\r\n          </div>\r\n\r\n          <ul className=\"posts-list\">{postList}</ul>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n          <p className=\"fav-label\">Your Favourites</p>\r\n          <ul className=\"posts-list\">\r\n            <Favourites\r\n              likes={this.state.liked}\r\n              likedPosts={this.state.likedPosts}\r\n            />\r\n          </ul>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nimport \"./App.css\";\nimport PostList from \"./containers/PostList\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App-header\">\n          <header>\n            <h2>Product Hunt </h2>\n          </header>\n\n          <p>The best new products in TEch</p>\n        </div>\n\n        <Container fluid={false}>\n          <PostList />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}